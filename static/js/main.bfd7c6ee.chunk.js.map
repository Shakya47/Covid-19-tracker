{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","img/image.jpg","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfd7c6ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__TwPjL\",\"card\":\"Cards_card__wYgzW\",\"infected\":\"Cards_infected__3Ghcn\",\"recovered\":\"Cards_recovered__2PLLk\",\"deaths\":\"Cards_deaths__12hEG\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards= ({ data:{confirmed ,recovered, deaths, lastUpdate}})=>{\r\n    \r\n    if(!confirmed){\r\n        return 'Loading...'; \r\n    }\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing ={3} justify= \"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active Cases </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">REAL DATE</Typography>\r\n                        <Typography variant=\"body2\">Number of Active Cases </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Death</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">REAL DATE</Typography>\r\n                        <Typography variant=\"body2\">Number of Active Cases </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changeableUrl =url;\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const {data: {confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n        return {confirmed,recovered, deaths,lastUpdate};\r\n       \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n       const modifiedData= data.map((dailyData)=>({\r\n           confirmed: dailyData.confirmed.total,\r\n           deaths: dailyData.deaths.total,\r\n           date: dailyData.reportDate,\r\n       }))\r\n\r\n       return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const {data: { countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=> country.name)\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { fetheDailyData, fetchDailyData} from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart= ({ data: {confirmed, recovered, deaths}, country })=>{\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () =>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        \r\n        fetchAPI(); \r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ?(<Line\r\n        data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({ confirmed }) => confirmed),\r\n                label: 'Infected' ,\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n            },{\r\n                \r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'deaths' ,\r\n                    borderColor: 'red',\r\n                    borderColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                \r\n            }]\r\n        }}\r\n        />) : null\r\n    );\r\n\r\n   \r\n\r\n    const barChart = (\r\n       confirmed\r\n        ?(\r\n            <Bar\r\n            data ={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255,0,0,0.5)'\r\n                ],\r\n                data : [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: {display: false},\r\n                title: { display: true, text: 'Current state in ${country}'},\r\n            }}\r\n             />\r\n        ): null\r\n    )\r\n\r\n    return(\r\n        <div className ={styles.container}>\r\n            { country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker= ({ handleCountryChange })=>{\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI =async ()=> {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries])\r\n\r\n \r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport coronaImage from './img/image.jpg';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\n\r\nimport{fetchData} from './api';\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({data: fetchedData, country: country});\r\n\r\n        \r\n    }\r\n\r\n    render(){\r\n\r\n        const{ data, country } =this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country ={country}/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3l85j\",\"image\":\"App_image__8GReu\",\"iamge\":\"App_iamge__r0td1\"};","module.exports = __webpack_public_path__ + \"static/media/image.c3b9822d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3TCR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2WX2D\"};"],"sourceRoot":""}